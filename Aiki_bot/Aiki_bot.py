import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

API_TOKEN = '7926287029:AAHT-i0PuNhFBIr6L_Xza3h-qimuIl3kBzs'

bot = telebot.TeleBot(API_TOKEN)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚Ü©Ô∏è"
def create_back_button():
    btn_back = KeyboardButton('–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚Ü©Ô∏è')
    return btn_back

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫
def create_markup1lvl():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = KeyboardButton('–¢–∞–π–¥–∑—é—Ü—É (—Ç–µ—Ö–Ω—ñ–∫–∏ —Ç—ñ–ª–∞)')
    btn2 = KeyboardButton('–ë—É–∫—ñ –≤–∞–∑–∞ (—Ç–µ—Ö–Ω—ñ–∫–∏ –∑—ñ –∑–±—Ä–æ—î—é)')
    markup.add(btn1, btn2)
    return markup

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ (2 —Ä—ñ–≤–µ–Ω—å)
def create_markup2lvl():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn3 = KeyboardButton('–£–∫–µ–º—ñ (–ø–µ—Ä–µ–∫–∏–¥–∏)')
    btn4 = KeyboardButton('–ö–∏–¥–∫–∏')
    btn5 = KeyboardButton('–ö–∞–º–∞e (–ø–æ–∑–∏—Ü—ñ—ó)')
    btn6 = KeyboardButton('–¢–∞–π-—Å–∞–±–∞–∫—ñ (–ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è)')
    btn7 = KeyboardButton('–î–æ—Ä—ñ/—Ç–æ—Ä—ñ (–∑–∞—Ö–≤–∞—Ç–∏)')
    btn8 = KeyboardButton('–£–¥–∞—Ä–∏')
    btn_back = create_back_button()
    markup.add(btn3, btn4, btn5, btn6, btn7, btn8)
    markup.add(btn_back)
    return markup

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–Ω–æ–ø–æ–∫ (3 —Ä—ñ–≤–µ–Ω—å)
def create_markup3lvl():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn10 = KeyboardButton('–¢–∞—á—ñ –≤–∞–∑–∞ (—Å—Ç–æ—è—á–∏)')
    btn11 = KeyboardButton('–°—É–≤–∞—Ä—ñ –≤–∞–∑–∞ (—Å–∏–¥—è—á–∏)')
    btn_back = create_back_button()
    markup.add(btn10, btn11)
    markup.add(btn_back)
    return markup

# –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ '/start'
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = create_markup1lvl()
    bot.reply_to(message, "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –∑ –∞–π–∫—ñ–¥–æü•ãüáØüáµ \n –û–±–µ—Ä–∏ —Ç–µ—Ö–Ω—ñ–∫—Éüëá", reply_markup=markup)

# –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text in [
    '–¢–∞–π–¥–∑—é—Ü—É (—Ç–µ—Ö–Ω—ñ–∫–∏ —Ç—ñ–ª–∞)', '–ë—É–∫—ñ –≤–∞–∑–∞ (—Ç–µ—Ö–Ω—ñ–∫–∏ –∑—ñ –∑–±—Ä–æ—î—é)', '–¢–∞—á—ñ –≤–∞–∑–∞ (—Å—Ç–æ—è—á–∏)', '–°—É–≤–∞—Ä—ñ –≤–∞–∑–∞ (—Å–∏–¥—è—á–∏)',
    '–£–∫–µ–º—ñ (–ø–µ—Ä–µ–∫–∏–¥–∏)', '–ö–∏–¥–∫–∏', '–ö–∞–º–∞e (–ø–æ–∑–∏—Ü—ñ—ó)', '–¢–∞–π-—Å–∞–±–∞–∫—ñ (–ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è)', '–î–æ—Ä—ñ/—Ç–æ—Ä—ñ (–∑–∞—Ö–≤–∞—Ç–∏)', '–£–¥–∞—Ä–∏',
    '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚Ü©Ô∏è'
])
def handle_button(message):
    if message.text == '–¢–∞–π–¥–∑—é—Ü—É (—Ç–µ—Ö–Ω—ñ–∫–∏ —Ç—ñ–ª–∞)':
        bot.reply_to(message, "–¢–∞–π–¥–∑—é—Ü—É –≤–∫–ª—é—á–∞—î —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ —Ç–µ—Ö–Ω—ñ–∫–∏ —Ç—ñ–ª–∞, —è–∫—ñ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑–±—Ä–æ—ó.",
                     reply_markup=create_markup2lvl())
    elif message.text == '–£–∫–µ–º—ñ (–ø–µ—Ä–µ–∫–∏–¥–∏)':
        bot.reply_to(message, "–£–∫–µ–º—ñ - —Ü–µ —Ç–µ—Ö–Ω—ñ–∫–∏ –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –ø–∞–¥—ñ–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–∫–æ—á—É–≤–∞–Ω–Ω—è.\n–û–±–µ—Ä–∏ —Ç–∏–ø ‚¨áÔ∏è",
                     reply_markup=create_markup3lvl())
    elif message.text == '–¢–∞—á—ñ –≤–∞–∑–∞ (—Å—Ç–æ—è—á–∏)':
        text = open('tativasa.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–°—É–≤–∞—Ä—ñ –≤–∞–∑–∞ (—Å–∏–¥—è—á–∏)':
        text = open('syvarivasa.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–ö–∏–¥–∫–∏':
        text = open('kudku.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–ö–∞–º–∞e (–ø–æ–∑–∏—Ü—ñ—ó)':
        text = open('kamae.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–¢–∞–π-—Å–∞–±–∞–∫—ñ (–ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è)':
        text = open('taj_sabaki.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–î–æ—Ä—ñ/—Ç–æ—Ä—ñ (–∑–∞—Ö–≤–∞—Ç–∏)':
        text = open('zahvatu.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–£–¥–∞—Ä–∏':
        text = open('ydaru.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–ë—É–∫—ñ –≤–∞–∑–∞ (—Ç–µ—Ö–Ω—ñ–∫–∏ –∑—ñ –∑–±—Ä–æ—î—é)':
        text = open('bukivasa.txt', 'r', encoding='utf-8').read()
        bot.reply_to(message, text)
    elif message.text == '–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥‚Ü©Ô∏è':
        bot.reply_to(message, "–ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –Ω–∞–∑–∞–¥", reply_markup=create_markup1lvl())

bot.infinity_polling()
